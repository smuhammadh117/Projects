import numpy as np
import pymc as pm
import pandas as pd
import arviz as az
from pymc.math import dot, invlogit
import pytensor.tensor as pt
import math
import os
import statsmodels.api as sm
import matplotlib.pyplot as plt
import statsmodels.api as sm
from statsmodels.graphics.api import abline_plot

os.chdir("C:/Users/466131/Documents/Baye")

data = pd.read_csv("MMAProject.csv", index_col=0)
X = data[["SA","SD","KO","SS","GI"]].to_numpy()
y = data["y"].to_numpy()

# y = np.reshape(y, (-1, 1))

print(X.shape)
print(y.shape)
n=26

with pm.Model() as m:
    if __name__ == '__main__':

        X_data = pm.Data("X_data", X, mutable=True)
        y_data = pm.Data("y_data", y, mutable=True)

        alpha = pm.Normal("alpha", mu=0, sigma=10)
        betas = pm.Normal("beta", mu=0, sigma=5, shape=X.shape[1])

        p = invlogit(alpha + dot(X_data, betas))

        pm.Binomial("y",n=26, p=p, observed=y_data)

        trace = pm.sample(10000,target_accept=0.99)
        print(az.summary(trace))
        
        ppc = pm.sample_posterior_predictive(trace,var_names = ['y'])
        yhat=(az.summary(ppc,var_names=['y'])['mean'].values)
        r2 = az.r2_score(y, yhat)
        data = az.convert_to_inference_data(trace)
        idata = pm.compute_log_likelihood(data)
        dev = az.waic(idata,scale="deviance",var_name="y")
        print(dev)
        print(r2)
        print(yhat)